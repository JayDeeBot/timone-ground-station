Date: 25/09/2025

Stakeholder: Aditya Sriram

Notes:

1. Jarred - Will recieve bytes from Sachin and process them myself
2. Jarred - Will have a single program that will serve as a communicator between Sachin and the app
3. Jarred - Behind the communicator there will be three programs (or classes - setup is fluid atm) - each of these will service one of the following:
    915 MHz LoRa - recieving
    433 MHz LoRa - recieving
    Settings - sending data

4. Jarred - Setup a system (API/Class/Conifg) for importing new modules such as compass onto the AiMBoard - create the compass method as a template:
    Requirements;
        - Name of the device example: "compass"
        - Graphing - bool flag to say whether the device should graph its data
        - Tabbing - bool flag - should the device have its own Tabbing
        - Raw values - should the raw values be displayed
        - etc. 
(draft this and show adi - iterate)

Sachin - Needs to setup communication system to the i2c devices on the AiMBoard

Communication protocol:

Jarred/Sachin (Sending): [byte to say hi I'm sending][send/recieve byte][byte for saying what i'm sending - 915/433/aimdevice(1-4)/setting(explicit)][how many bytes we are sending][bytes - data][byte to say bye]

"915" - 0x01
"433" - 0x02
"aim port1" - 0x03
"aim port2" - 0x04

I2C SPI



hi byte and bye byte should be different - don't select a common byte - something like 0xDE or 0xAB

Speak to Nikhil about what devices he has on his board and exactly what he will be sending. Figure out a way to parse the data he gets back. 

SD Card - During operation don't read data. Post flight access.  